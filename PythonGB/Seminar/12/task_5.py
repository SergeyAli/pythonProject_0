'''
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏ –¥–æ–±–∞–≤–∏–º —ç–∫–æ–Ω–æ–º–∏—é –ø–∞–º—è—Ç–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–µ–∑ —Å–ª–æ–≤–∞—Ä—è __dict__.
'''

class Rectangle:
    __slots__ = ('_height', '_width')

    def __init__(self, height: int, width=None):
        self._height = height
        if width:
            self._width = width
        else:
            self._width = height

    def get_perimetr(self):
        return 2 * (self._height + self._width)

    def get_area(self):
        return self._width * self._height

    @property
    def height(self):
        return self._height

    @property
    def width(self):
        return self._width

    @height.setter
    def height(self, value):
        if value <= 0:
            raise ValueError("–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
        self._height = value

    @width.setter
    def width(self, value):
        if value <= 0:
            raise ValueError("–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
        self._width = value

    def __str__(self):
        return f'–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ ({self._height}x{self._width}), S= {self.get_area()}'

    def __repr__(self):
        return f'—Ä–∞–∑–º–µ—Ä—ã:({self._height}x{self._width}), S= {self.get_area()}'


if __name__ == "__main__":
    rect = Rectangle(2, 5)
    rect.width = 2

    print(rect)
