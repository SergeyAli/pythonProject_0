'''
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
üìå –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö —Å–µ–º–∏–Ω–∞—Ä–æ–≤.
üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏ –≤—Å—Ç—Ä–æ–π—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö).
üìå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã —Å–≤–æ–π—Å—Ç–≤.
'''


class Rectangle:

    def __init__(self, height: int, width=None):
        self._height = height
        if width:
            self._width = width
        else:
            self._width = height

    def get_perimetr(self):
        return 2 * (self._height + self._width)

    def get_area(self):
        return self._width * self._height

    @property
    def height(self):
        return self._height

    @property
    def width(self):
        return self._width

    @height.setter
    def height(self, value):
        if value <= 0:
            raise ValueError("–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
        self._height = value

    @width.setter
    def width(self, value):
        if value <= 0:
            raise ValueError("–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
        self._width = value

    def __str__(self):
        return f'–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ ({self._width}—Ö{self._height}), S= {self.get_area()}'

    def __repr__(self):
        return f'—Ä–∞–∑–º–µ—Ä—ã:({self._width}—Ö{self._height}), S= {self.get_area()}'


if __name__ == "__main__":
    rect = Rectangle(2, 5)
    rect.width = 2

    print(rect)
