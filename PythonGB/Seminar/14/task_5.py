'''
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–∞—Ö –ø–æ –û–û–ü –±—ã–ª —Å–æ–∑–¥–∞–Ω –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Ö—Ä–∞–Ω—è—â–∏–π –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É, –∞ —Ç–∞–∫–∂–µ –≤—ã—á–∏—Å–ª—è—é—â—É—é –ø–µ—Ä–∏–º–µ—Ç—Ä, –ø–ª–æ—â–∞–¥—å –∏
–ø–æ–∑–≤–æ–ª—è—é—â–∏–π —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –∏ –≤—ã—á–∏—Ç–∞—Ç—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏ –±–µ—Ä—è –∑–∞ –æ—Å–Ω–æ–≤—É –ø–µ—Ä–∏–º–µ—Ç—Ä.
üìå –ù–∞–ø–∏—à–∏—Ç–µ 3-7 —Ç–µ—Å—Ç–æ–≤ unittest –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞.
'''

from builtins import str

from Rectangle import Rectangle
import unittest

class TestRectangle(unittest.TestCase):

    def test_1_area(self):
        self.assertEqual(Rectangle.get_area(Rectangle(2)), 4)
    def test_2_perimetr(self):
        self.assertEqual(Rectangle.get_perimeter(Rectangle(2,5)), 14)
    def test_2_sub(self):
        self.assertEqual(str(Rectangle(3, 7) - Rectangle(2, 5)), str(Rectangle(1, 2)))
    def test_2_sum(self):
        self.assertEqual(str(Rectangle(3, 7) + Rectangle(2, 5)), str(Rectangle(5, 12)))


if __name__ == '__main__':
    unittest.main(verbosity=2)

