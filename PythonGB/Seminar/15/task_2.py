'''
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–µ –ø—Ä–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –±—ã–ª —Å–æ–∑–¥–∞–Ω –ª–æ–≥–∏—Ä—É—é—â–∏–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä. –û–Ω —Å–æ—Ö—Ä–∞–Ω—è–ª –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –µ—ë
—Ä–∞–±–æ—Ç—ã –≤ —Ñ–∞–π–ª.
üìå –ù–∞–ø–∏—à–∏—Ç–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –Ω–æ –≤–Ω—É—Ç—Ä–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–æ–¥—É–ª—å logging.
'''

import logging
from typing import Callable


# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä, —Å–æ—Ö—Ä–∞–Ω—è—é—â–∏–π –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –≤ json —Ñ–∞–π–ª.
def decor_saved_result_json(fun: Callable):
    def wrapper(*args):
        res = fun(*args)

        logger.info(f'–ê–í–¢–û: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å —á–∏—Å–ª–∞ {args[0]} –Ω–∞ {args[1]} = {res}')

    return wrapper


@decor_saved_result_json
def diving(a, b):
    try:
        res = a / b
        # logger.info(f'–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å —á–∏—Å–ª–∞ {a} –Ω–∞ {b} = {res}')
        return res
    except ZeroDivisionError as exp:
        # logger.error(f'–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å —á–∏—Å–ª–∞ {a}')
        print('–¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å –Ω–µ–ª—å–∑—è')
    return float('inf')


if __name__ == '__main__':
    logging.basicConfig(filename='project.log', filemode='a', encoding='utf-8', level=logging.NOTSET)
    logger = logging.getLogger(__name__)
    diving(2, 6)
    diving(2, 0)
    diving(6, 5)
